generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  projects  Project[]
  donations Donation[]
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  budget      Float?   @default(0)
  duration    Int?     @default(24)
  ownerId     Int
  owner       User     @relation(fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  investments Investment[]
  donations   Donation[]
  
  // Nouveaux champs pour la marketplace
  domain      String?
  stage       String?
  status      String   @default("active")
  location    String?

  // âœ… Champs IA (nouveaux)
  impactScore   Int?
  strengths     String?
  weaknesses    String?
  shortFeedback String?
}

model Donation {
  id        Int      @id @default(autoincrement())
  amount    Float
  userId    Int
  projectId Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
}

model Investment {
  id        Int      @id @default(autoincrement())
  amount    Float
  investor  String
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
}

// Add these models to your existing schema

model Sponsor {
  id              Int      @id @default(autoincrement())
  name            String
  logo            String?
  description     String?  @db.Text
  contactEmail    String
  contactPhone    String?
  website         String?
  sponsorshipType String
  totalAmount     Float    @default(0)
  startDate       DateTime @default(now())
  endDate         DateTime?
  status          String   @default("active")
  categories      Json
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  sponsorships    Sponsorship[]
}

model Sponsorship {
  id              Int      @id @default(autoincrement())
  sponsorId       Int
  sponsor         Sponsor  @relation(fields: [sponsorId], references: [id])
  itemName        String
  itemCategory    String
  amount          Float
  description     String?  @db.Text
  duration        Int?
  status          String   @default("active")
  startDate       DateTime @default(now())
  endDate         DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model SponsorshipRequest {
  id              Int      @id @default(autoincrement())
  companyName     String
  contactName     String
  contactEmail    String
  contactPhone    String?
  message         String   @db.Text
  requestedAmount Float?
  requestedType   String?
  categories      Json
  status          String   @default("pending")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}